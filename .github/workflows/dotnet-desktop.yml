name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master, dev, test ]
  pull_request:
    branches: [ main, master, dev, test ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:  
  build:    
    runs-on: windows-latest
    
    steps:      
      - uses: actions/checkout@v3
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup VS Dev Environment
        uses: seanmiddleditch/gha-setup-vsdevenv@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Restore Packages
        run: nuget restore dcs-dtc.sln

      - name: Disable Out of Process Building
        run: .\DisableOutOfProcBuild.exe
        working-directory: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild

      - name: Build Solution
        run: |
          msbuild.exe "src/Iris Screen Exporter.sln" /p:platform="Any CPU" /p:configuration="Release"

      - name: Build the Installer
        run: DevEnv "src/Iris Screen Exporter.sln" /build Release

      - uses: actions/upload-artifact@v2
        with:
          name: build-result
          path: installer/Release/dtc-setup.msi

      - name: Upload binaries to release
        uses: actions/upload-artifact@v3
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "Installer/Iris Setup/Release/Iris Screen Exporter 1.0.2023.0909.msi"
          asset_name: Iris-Screen-Exporter-${{ github.ref_name }}.msi
          tag: ${{ github.ref }}
          overwrite: true
